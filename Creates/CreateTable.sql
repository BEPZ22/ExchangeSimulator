Create or replace type datos as object 
(dat_monto number(28,8),
dat_fecha_ejecucion date
)
/
Create or replace type precios as object (
pre_precio_mercado number(28,8),
pre_equivalente_dolares number(28,8),
pre_precio_variacion number(28,8)
)
/
Create or replace type moneda as object 
(mon_nombre varchar2(50),
mon_tipo varchar2(50)
)
/
Create or replace type ubicacion as object 
(ubi_nombre_pais varchar2(50),
ubi_territorio_km numeric(20)
)
/
Create or replace type ubicado_en as table of ubicacion;
/
Create or replace type clasificacion as object 
(cla_nombre_evento varchar2(250),
cla_descripcion varchar2(250),
cla_tipo varchar2(50)
)
/
Create or replace type clasificado_en as table of clasificacion;
/
Create or replace type telefono as varray(3) of varchar2(15);
/
Create or replace type email as varray(3) of varchar2(50);
/
Create or replace type sub_tipo as varray(3) of varchar2(50);
/

create table contingencia (
con_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
con_nombre varchar(50),
con_evento clasificado_en,
con_fecha_suceso date,
constraint pk_contingencia primary key (con_id)) 
nested table con_evento store as clasificacion_TA;


create table criptomoneda (
cri_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
cri_nombre varchar(50),
cri_precio precios,
cri_fk_contingencia integer,
constraint pk_criptomoneda primary key (cri_id),
constraint fk_criptomoneda_contingencia foreign key (cri_fk_contingencia) references contingencia (con_id));

create table mercado (
mer_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
mer_tipo varchar (50),
mer_tasa_cambio precios,
mer_sub_tipo sub_tipo,
constraint pk_mercado primary key (mer_id));

create table crip_mer (
crme_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
crme_fecha date,
crme_descripcion varchar(50),
crme_fk_criptomoneda integer,
crme_fk_mercado integer,
constraint pk_cri_mer primary key (crme_id),
constraint fk_cri_mer_criptomoneda foreign key (crme_fk_criptomoneda) references criptomoneda (cri_id),
constraint fk_cri_mer_mercado foreign key (crme_fk_mercado) references mercado (mer_id)
);

create table direccion (
dir_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
dir_nombre varchar(50),
dir_calle varchar(50),
dir_avenida varchar(50),
dir_casa varchar(50),
dir_vereda varchar(50),
dir_urbanizacion varchar(50),
dir_estado varchar(50),
dir_pais ubicado_en,
constraint pk_direccion primary key (dir_id))
nested table dir_pais store as ubicacion_TA;

create table usuario(
usu_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
usu_primer_nombre varchar(50),
usu_segundo_nombre varchar(50),
usu_primer_apellido varchar(50),
usu_segundo_apellido varchar(50),
usu_saldo integer,
usu_sexo char(1),
usu_pasaporte BLOB,
usu_fecha_nacimiento date,
usu_fk_direccion integer,
usu_telefono telefono,
usu_email email,
constraint pk_usuario primary key (usu_id),
constraint fk_usuario_direccion foreign key (usu_fk_direccion) references direccion (dir_id)
);

create table billetera(
bil_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
bil_monto number(28,8),
bil_equivalente precios,
bil_fk_usuario integer,
bil_fk_criptomoneda integer,
constraint pk_billetera primary key (bil_id),
constraint fk_billetera_usuario foreign key (bil_fk_usuario) references usuario (usu_id),
constraint fk_billetera_criptomoneda foreign key (bil_fk_criptomoneda) references criptomoneda (cri_id)
);

create table orden (
ord_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
ord_tipo varchar(50),
ord_precio_compra_venta number(28,8),
ord_moneda number(28,8),
ord_mercado varchar2(50),
ord_status varchar2(20),
ord_tipo_orden varchar2(50),
ord_fecha_creacion date,
ord_monto number(28,8),
ord_fk_usuario integer,
constraint pk_orden primary key (ord_id),
constraint fk_orden_usuario foreign key (ord_fk_usuario) references usuario (usu_id)
);

create table operacion (
ope_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
ope_tipo varchar(50),
ope_dato datos,
ope_referencia number,
ope_fk_orden integer, 
constraint pk_operacion primary key (ope_id),
constraint fk_operacion foreign key (ope_fk_orden) references orden (ord_id)
);

create table transaccion(
tra_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
tra_tipo varchar(50),
tra_precio_cambio precios,
tra_fk_crip_mer integer,
constraint pk_transacion primary key (tra_id),
constraint fk_crip_mer foreign key (tra_fk_crip_mer) references crip_mer (crme_id)
);

create table trans_oper(
trop_id numeric (20) GENERATED BY DEFAULT AS IDENTITY,
trop_fecha_inicio date,
trop_fecha_fin date,
trop_fk_transaccion integer,
trop_fk_operacion integer,
constraint pk_trans_oper primary key (trop_id),
constraint fk_transaccion foreign key (trop_fk_transaccion) references transaccion (tra_id),
constraint fk_operacion_uno foreign key (trop_fk_operacion) references operacion(ope_id)
);

create global temporary table pronostico(
pro_id numeric(20) not null,
pro_monto number(28,8),
pro_id_cuadrado numeric(20),
pro_monto_id number(28,8),
pro_id_criptomoneda number
)on commit preserve rows;